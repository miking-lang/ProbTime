def f(data : [TSV(Float)]) : [Float] {
  // We declare that the 'out' variable is mutated inside the loop (push). The
  // loop iterates over the timestamped values of 'data' (messages with a
  // payload and an associated timestamp).
  var out = []
  for tsv in data update out {
    var x = value(tsv) + 1.0
    out = push(out, x)
  }
  return out
}

// Definition of a periodic task template 'x'. We can instantiate multiple
// tasks from each task template, by connecting its inputs and outputs
// differently and/or by providing different arguments when instantiating it.
template X(period : Int) {
  // We declare that this template has one input port and one output port. Both
  // of these expect floating-point payloads.
  input in1 : Float
  output out1 : Float
  // Repeat code in the block with a periodic delay in-between
  while true {
    read in1 to indata
    for x in f(indata) {
      write x to out1
    }
    delay period
  }
}

system {
  sensor src : Float rate 1s
  actuator dst : Float rate 200ms

  task a = X(500ms)
  task b = X(250ms)

  src -> a.in1
  a.out1 -> b.in1
  b.out1 -> dst
}
